<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
    <generated>
      <config projectName="LB2D" targetName="LB2D" />
      <config projectName="LB2D" targetName="EasyBMP" />
    </generated>
  </component>
  <component name="CMakeSettings" AUTO_RELOAD="true">
    <configurations>
      <configuration PROFILE_NAME="RelWithDebInfo" ENABLED="true" CONFIG_NAME="RelWithDebInfo" GENERATION_OPTIONS="-DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake" />
      <configuration PROFILE_NAME="WSL" ENABLED="true" CONFIG_NAME="RelWithDebInfo" TOOLCHAIN_NAME="WSL" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="6281a871-c0f2-45af-ab82-087922cfaebd" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.vs/LB2D_Framework/v17/.suo" beforeDir="false" afterPath="$PROJECT_DIR$/.vs/LB2D_Framework/v17/.suo" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.vs/LB2D_Framework/v17/Browse.VC.db" beforeDir="false" afterPath="$PROJECT_DIR$/.vs/LB2D_Framework/v17/Browse.VC.db" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.vs/LB2D_Framework/v17/ipch/AutoPCH/80da3313998201e2/MAIN.ipch" beforeDir="false" afterPath="$PROJECT_DIR$/.vs/LB2D_Framework/v17/ipch/AutoPCH/80da3313998201e2/MAIN.ipch" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.vs/LB2D_Framework/v17/workspaceFileList.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.vs/LB2D_Framework/v17/workspaceFileList.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.vs/VSWorkspaceState.json" beforeDir="false" afterPath="$PROJECT_DIR$/.vs/VSWorkspaceState.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.vs/cmake.db" beforeDir="false" afterPath="$PROJECT_DIR$/.vs/cmake.db" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.vs/slnx.sqlite" beforeDir="false" afterPath="$PROJECT_DIR$/.vs/slnx.sqlite" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-relwithdebinfo/.ninja_deps" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-relwithdebinfo/.ninja_deps" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-relwithdebinfo/.ninja_log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-relwithdebinfo/.ninja_log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-relwithdebinfo/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-relwithdebinfo/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-relwithdebinfo/CMakeFiles/clion-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-relwithdebinfo/CMakeFiles/clion-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-relwithdebinfo/LB2D.exe" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-relwithdebinfo/LB2D.exe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-relwithdebinfo/LB2D.ilk" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-relwithdebinfo/LB2D.ilk" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-relwithdebinfo/LB2D.pdb" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-relwithdebinfo/LB2D.pdb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-relwithdebinfo/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-relwithdebinfo/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-relwithdebinfo/freeglut.dll" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-relwithdebinfo/freeglut.dll" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-relwithdebinfo/glew32.dll" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-relwithdebinfo/glew32.dll" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-relwithdebinfo/third_party/EasyBMP/EasyBMP.lib" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-relwithdebinfo/third_party/EasyBMP/EasyBMP.lib" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/.cmake/api/v1/reply/cache-v2-3ac26ae1fb049a37d927.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/.cmake/api/v1/reply/codemodel-v2-a8f8d9713e03f25ff6e0.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/.cmake/api/v1/reply/index-2021-12-07T13-56-45-0883.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/.cmake/api/v1/reply/target-EasyBMP-Debug-6d31879e2f8d85ef5019.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/.cmake/api/v1/reply/target-LB2D-Debug-2ddcfe0b1f10913b95d4.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/.ninja_deps" beforeDir="false" afterPath="$PROJECT_DIR$/out/build/x64-Debug/.ninja_deps" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/.ninja_log" beforeDir="false" afterPath="$PROJECT_DIR$/out/build/x64-Debug/.ninja_log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/out/build/x64-Debug/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/CMakeFiles/LB2D.dir/src/main.cpp.obj" beforeDir="false" afterPath="$PROJECT_DIR$/out/build/x64-Debug/CMakeFiles/LB2D.dir/src/main.cpp.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/CMakeFiles/LB2D.dir/vc140.pdb" beforeDir="false" afterPath="$PROJECT_DIR$/out/build/x64-Debug/CMakeFiles/LB2D.dir/vc140.pdb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/LB2D.exe" beforeDir="false" afterPath="$PROJECT_DIR$/out/build/x64-Debug/LB2D.exe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/LB2D.ilk" beforeDir="false" afterPath="$PROJECT_DIR$/out/build/x64-Debug/LB2D.ilk" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/LB2D.pdb" beforeDir="false" afterPath="$PROJECT_DIR$/out/build/x64-Debug/LB2D.pdb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/out/build/x64-Debug/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/build.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/out/build/x64-Debug/build.ninja" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/freeglutd.dll" beforeDir="false" afterPath="$PROJECT_DIR$/out/build/x64-Debug/freeglutd.dll" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/glew32d.dll" beforeDir="false" afterPath="$PROJECT_DIR$/out/build/x64-Debug/glew32d.dll" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/third_party/EasyBMP/CMakeFiles/EasyBMP.dir/EasyBMP.cpp.obj" beforeDir="false" afterPath="$PROJECT_DIR$/out/build/x64-Debug/third_party/EasyBMP/CMakeFiles/EasyBMP.dir/EasyBMP.cpp.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/third_party/EasyBMP/CMakeFiles/EasyBMP.dir/EasyBMP.pdb" beforeDir="false" afterPath="$PROJECT_DIR$/out/build/x64-Debug/third_party/EasyBMP/CMakeFiles/EasyBMP.dir/EasyBMP.pdb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/build/x64-Debug/third_party/EasyBMP/EasyBMP.lib" beforeDir="false" afterPath="$PROJECT_DIR$/out/build/x64-Debug/third_party/EasyBMP/EasyBMP.lib" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/simulation.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/simulation.hpp" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:RelWithDebInfo" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2021" />
    <option name="minorVersion" value="3" />
  </component>
  <component name="ProjectId" id="21xQG30nPRIGZJXKmOHmUNBw6pU" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="RunOnceActivity.cidr.known.project.marker" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="cf.first.check.clang-format" value="false" />
    <property name="cidr.known.project.marker" value="true" />
    <property name="cmake.loaded.for.project" value="true" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="settings.editor.selected.configurable" value="CPPToolchains" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\jonas\Documents\Code\LBM\LB2D_Framework" />
    </key>
  </component>
  <component name="RunManager" selected="CMake Application.LB2D">
    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
      </method>
    </configuration>
    <configuration name="EasyBMP" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LB2D" TARGET_NAME="EasyBMP" CONFIG_NAME="RelWithDebInfo">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LB2D" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" WORKING_DIR="file://$ProjectFileDir$" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LB2D" TARGET_NAME="LB2D" CONFIG_NAME="RelWithDebInfo" RUN_TARGET_PROJECT_NAME="LB2D" RUN_TARGET_NAME="LB2D">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.LB2D" />
      <item itemvalue="CMake Application.EasyBMP" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="6281a871-c0f2-45af-ab82-087922cfaebd" name="Changes" comment="" />
      <created>1638880162083</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1638880162083</updated>
      <workItem from="1638880164011" duration="854000" />
      <workItem from="1638881239763" duration="199000" />
      <workItem from="1638884164603" duration="1106000" />
      <workItem from="1638885466262" duration="936000" />
      <workItem from="1638918830547" duration="463000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="XDebuggerManager">
    <watches-manager>
      <configuration name="CMakeRunConfiguration">
        <watch expression="source_code[allocator]" />
      </configuration>
    </watches-manager>
  </component>
</project>